2crank ing 1 crank getargs 1 split swap
2crank ing 0 crank repl.cog
2crank ing 1 crank = stack
2crank ing 0 crank 1 split swap drop
2crank ing 1 crank compose compose compose
2crank ing 1 crank if
2crank ing 0 crank
2crank ing 0 crank addon
2crank ing 2 crank unglue unglue compose unglue
2crank ing 1 crank compose def
2crank ing 0 crank
2crank ing 1 crank getd geti _ _ delim i_cognition> _concat_swap_dup_i d swap d quote
2crank ing 2 crank print addon read addon evalstr addon
2crank ing 2 crank ssize addon 0 quote compose eval = addon
2crank ing 1 crank

getd geti _ _ delim i_
_concat_swap_dup_i d swap d quote

2crank ing 2 crank print addon ? addon
2crank ing 1 crank VMACRO cast quote
2crank ing 1 crank stack quote prepose compose
2crank ing 2 crank if addon repl compose VMACRO cast repl
2crank ing 1 crank swap def
2crank ing 0 crank
2crank ing 2 crank addon undef
2crank ing 0 crank
2crank ing 1 crank stack
2crank ing 2 crank repl bequeath ccd bequeath repl compose repl undef
2crank ing 0 crank
2crank ing 2 crank 1 quote crank unglue evalstr unglue
2crank ing 1 crank compose compose VMACRO cast
2crank ing 2 crank
2crank ing 2 crank 1 quote crank unglue eval unglue
2crank ing 1 crank compose compose VMACRO cast
2crank ing 0 crank
2crank ing 2 crank dip unglue dup eval
2crank ing 0 crank ing
2crank ing 0 crank
2crank ing 0 crank ing
