# [ === crankbase [ 1 ] metacrankbase dup 1 =
# ( ( meta-crank-stuff0 ) )
# ( ( meta-crank-stuff1 ) )
# if dup stack swap
# 0 crank 1 1 metacrank

# meta-crank-stuff0 === dup ']' = ( drop swap drop swap [ 1 ] swap metacrank swap crank quote compose ( dup ) dip swap )
# ( dup '[' = ( drop '[' ) ( compose ( dup ) dip swap ) if ) if

# meta-crank-stuff1 === dup ']' = ( drop swap drop swap [ 1 ] swap metacrank swap crank )
# ( dup '[' = ( drop '[' ) ( compose ( dup ) dip swap ) if ) if


# declaration
3 crank [

1 crank # init
2 crank crankbase unglue 1 push metacrankbase addon dup addon 1 push = addon

1 crank # meta-crank-stuff0
2 crank dup unglue ] push = addon

2 crank drop unglue swap addon drop addon swap addon 1 push swap addon metacrank addon swap addon crank addon quote addon compose addon
3 crank dup
1 crank unglue quote compose
2 crank dip addon swap addon
1 crank quote compose

2 crank dup unglue [ push = addon
2 crank drop unglue [ compose
1 crank push
2 crank compose unglue
3 crank dup
1 crank unglue quote compose
2 crank dip addon swap addon
1 crank push
2 crank if addon
1 crank quote compose

2 crank if addon
1 crank quote VMACRO cast
1 crank quote compose

1 crank # meta-crank-stuff1
2 crank dup unglue ] push = addon

2 crank drop unglue swap addon drop addon swap addon 1 push swap addon metacrank addon swap addon crank addon
1 crank quote compose

2 crank dup unglue [ push = addon
2 crank drop unglue [ compose
1 crank push
2 crank compose unglue
3 crank dup
1 crank unglue quote compose
2 crank dip addon swap addon
1 crank push
2 crank if addon
1 crank quote compose

2 crank if addon
1 crank quote VMACRO cast
1 crank quote compose

1 crank # rest of the definition
2 crank if addon dup addon stack addon swap addon
2 crank 0 push crank addon 1 push 1 push metacrank addon

1 crank def

1 crank [ hello world [ helloooo ] (haha!_nested) ] .
16 crank [ eval eval eval eval eval hello worlds (eval) ] six crank in still
1 crank print space print space print space print newline
16 crank [ ing hello worlds (ing) ] way this works also
1 crank print space print space print space print newline
